name: Build And Test

on:
    pull_request:
      branches:
        - main
      types: [synchronize, opened, reopened, ready_for_review]


jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04
      volumes:
        - ${{ github.workspace }}:/core
        # Mount /usr so we can free space
        - /usr:/host_usr
      env:
        AGENT_TOOLSDIRECTORY: "$AGENT_TOOLSDIRECTORY"

    steps:
      - uses: actions/checkout@v3

      - name: Free space
        run: |
          rm -rf \
            /host_usr/share/dotnet /host_usr/local/lib/android /opt/ghc \
            /host_usr/local/share/powershell /host_usr/share/swift /host_usr/local/.ghcup \
            /host_usr/lib/jvm
          rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Install dependencies
        run: |
          apt update -y
          apt install --no-install-recommends --yes --fix-missing  \
            clang-format-15 \
            cmake \
            curl \
            dirmngr \
            git \
            gperf \
            libb64-dev \
            libcurl4-openssl-dev \
            libgoogle-perftools4 \
            libjemalloc2 \
            libnuma1 \
            libre2-dev \
            rapidjson-dev \
            software-properties-common \
            wget
          wget -O /tmp/boost.tar.gz https://archives.boost.io/release/1.80.0/source/boost_1_80_0.tar.gz && (cd /tmp && tar xzf boost.tar.gz) && mv /tmp/boost_1_80_0/boost /usr/include/boost && rm /tmp/boost.tar.gz
          apt install -y python3 python3-pip python3-venv
          # To avoid system/pip package conflict errors - use a venv:
          # https://stackoverflow.com/questions/75602063/pip-install-r-requirements-txt-is-failing-this-environment-is-externally-mana
          python3 -m venv .venv
          . .venv/bin/activate
          python3 -m pip install build pytest

      - name: Build
        run: |
          mkdir -p /core/build
          cd /core/build
          cmake -D CMAKE_INSTALL_PREFIX:PATH=`pwd`/install -D TRITON_CORE_HEADERS_ONLY=OFF -D TRITON_ENABLE_GPU=OFF -D TRITON_ENABLE_METRICS_GPU=OFF ..
          export TRITON_PYBIND="_c/triton_bindings.cpython-310-x86_64-linux-gnu.so"
          make -j8

      - name: Run tests with pytest
        run: |
          cd /core
          python3 -m pip install --force-reinstall build/python/generic/wheel/dist/tritonserver-*.whl
          pytest python/test -v
